package com.gxnu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.gxnu.entity.Authorization;


/**
 * ?????CURD????
 *
 * @author johny
 * ??��???
 */
public class AuthorizationDAO extends C3P0BaseDAO {
    /**
     * ??????
     *
     * @param authorization ????????????????????��{id=1,name=???}
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void add(Authorization authorization) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //????????????��???????��??1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("insert into authorization(role,menu) values(?,?)");
        //?????��?????,???????????????
        pstmt.setInt(1, authorization.getRole().getId());
        pstmt.setInt(2, authorization.getMenu().getId());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }

    /**
     * ??????
     *
     * @param authorization ???????????????????��{id=3,name=????}
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void merge(Authorization authorization) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //????????????��???????��??1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("update authorization set role=?,menu=? where id=?");
        //?????��?????,???????????????
        pstmt.setInt(2, authorization.getRole().getId());
        pstmt.setInt(3, authorization.getMenu().getId());
        pstmt.setInt(1, authorization.getId());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }

    /**
     * ??????
     *
     * @param authorization ???????????????????��{id=3,name=????}
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void delete(Authorization authorization) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbacpro?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //????????????��???????��??1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("delete from authorization where id=?");
        //?????��?????,???????????????
        pstmt.setInt(1, authorization.getId());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }
    //??????

    /**
     * ????????????????
     *
     * @return ???????��????��?????????authorization???????????????
     * @throws ClassNotFoundException
     * @throws SQLException
     */
    public List<Authorization>findAll() throws ClassNotFoundException, SQLException {
        //????????
        List<Authorization> authorizations = new ArrayList<Authorization>(); //???????????null
        int i = 0;
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //????????????��???????��??1???????????????????????
        PreparedStatement pstmt = conn.prepareStatement("select * from authorization");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        ResultSet rs = pstmt.executeQuery();

        //???????????????
        while (rs.next()) {
            //??????��???????��???????????????
			/*
			int id = rs.getInt("id");  //id???????? 
			String name = rs.getString("name"); //name????????
			Authorization authorization = new Authorization(id, name); //??????????Authorization??????
			authorizations[i] = authorization;
			i++;
			*/
            authorizations.add(new Authorization(rs.getInt("id"), new RoleDAO().findByPrimaryKey(rs.getInt("role")), new MenuDAO().findByPrimaryKey(rs.getInt("menu"))));
        }
        //????????????
        super.closeConnection(conn);
        //????????
        return authorizations;
    }

    /**
     * ???????????�b??
     *
     * @return ???????��????��?????????authorization???????????????
     * @throws ClassNotFoundException
     * @throws SQLException
     */
    public Authorization findByPrimaryKey(int ID) throws ClassNotFoundException, SQLException {
        Authorization authorization = new Authorization();

        Connection conn = super.getConnection();

        PreparedStatement pstmt = conn.prepareStatement("select * from authorization where id=?");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        pstmt.setInt(1, ID);
        ResultSet rs = pstmt.executeQuery();

        //?????????????????????????????????????????????????????��???
        if (rs.next()) {
            //??????��???????��???????????????

            authorization = new Authorization(rs.getInt("id"), new RoleDAO().findByPrimaryKey(rs.getInt("role")), new MenuDAO().findByPrimaryKey(rs.getInt("menu"))); //??????????Authorization??????


        }
        //????????????
        super.closeConnection(conn);
        //????????
        return authorization;
    }



    public List<Authorization> findAll(int roleId) throws ClassNotFoundException, SQLException {
        //????????
    	List<Authorization> authorizations = new ArrayList<Authorization>();

        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //????????????��???????��??1???????????????????????
        PreparedStatement pstmt = conn.prepareStatement("select * from authorization where role=?");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        pstmt.setInt(1,roleId);
        ResultSet rs = pstmt.executeQuery();

        //???????????????
        while (rs.next()) {
            //??????��???????��???????????????
			/*
			int id = rs.getInt("id");  //id????????
			String name = rs.getString("name"); //name????????
			Authorization authorization = new Authorization(id, name); //??????????Authorization??????
			authorizations[i] = authorization;
			i++;
			*/
            authorizations.add(new Authorization(rs.getInt("id"), new RoleDAO().findByPrimaryKey(rs.getInt("role")), new MenuDAO().findByPrimaryKey(rs.getInt("menu"))));
        }
        //????????????
        super.closeConnection(conn);
        //????????
        return authorizations;
    }


}
