package com.gxnu.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import com.gxnu.dao.C3P0BaseDAO;
import com.gxnu.entity.Doctor;
import com.gxnu.entity.Patient;
import com.gxnu.entity.Recipe;

/**
 * 处方表的CURD
 * @author 
 *
 */
public class RecipeDAO extends C3P0BaseDAO{
	//添加处方
	public void add(Recipe recipe) throws ClassNotFoundException, SQLException {
		Connection conn =super.getConnection();
		PreparedStatement pstmt =conn.prepareStatement("insert into recipe (time,proof,patient,doctor,yuliu) values(?,?,?,?,?)");
		//设置占位符的值
		pstmt.setString(1, recipe.getTime());//处方日期
		pstmt.setInt(2, recipe.getProof());//取药码
		pstmt.setInt(3, recipe.getPatient().getId());
		pstmt.setInt(4, recipe.getDoctor().getId());
		pstmt.setString(5, recipe.getYuliu());
		//执行sql语句，同步到mysql表  (这个代码很关键）
		pstmt.executeUpdate();
		//4.关闭数据库连接
		super.closeConnection(conn);
		
	}
	
	
	//修改处方
	public void merge(Recipe recipe) throws ClassNotFoundException, SQLException {
		Connection conn =super.getConnection();
		PreparedStatement pstmt =conn.prepareStatement("update recipe set time=?,proof=?,patient=?,doctor=?,yuliu=? where id=?");
		pstmt.setString(1, recipe.getTime());//处方日期
		pstmt.setInt(2, recipe.getProof());//取药码
		pstmt.setInt(3, recipe.getPatient().getId());
		pstmt.setInt(4, recipe.getDoctor().getId());
		pstmt.setString(5, recipe.getYuliu());
		pstmt.setInt(6, recipe.getId());
		pstmt.executeUpdate();
		super.closeConnection(conn);
	}
	
	//删除处方
	public void delete (Recipe recipe) throws ClassNotFoundException, SQLException {
		//加载驱动，连接数据库oms
		Connection conn =super.getConnection();
		//获取数据库操作对象pstmt,并绑定mysql语句
		PreparedStatement pstmt =conn.prepareStatement("delete from recipe where id=?");
		//设置占位符的值
		pstmt.setInt(1,recipe.getId());
		//执行sql语句，同步到mysql表
		pstmt.executeUpdate();
		//关闭数据库连接
		super.closeConnection(conn);
	}
	
	
	
	//查询所有处方
	public List<Recipe> findAll() throws ClassNotFoundException, SQLException {
		 List<Recipe> recipes =new ArrayList<Recipe>();
		Connection conn =super.getConnection();
		PreparedStatement pstmt =conn.prepareStatement("select * from recipe");
		//4.根据数据库操作对象获取结果集对象,结果集对象存放了所有查询的结果
		ResultSet rs = pstmt.executeQuery();
		//通过next()方法让结果集中的指针向下移动一行，当移动到结果集末尾时，返回到false,否则返回true
		while(rs.next()) {
			int recipeid = rs.getInt("id");//其中id为结果集字段名称
			String time= rs.getString("time");
			int proof= rs.getInt("proof");
			int patientid= rs.getInt("patient");
			int doctorid= rs.getInt("doctor");
		    String yuliu= rs.getString("yuliu");
			//把指针当前定位的记录信息存放到处方实体对象中
		    PatientDAO pa=new PatientDAO();
		    Patient patient=pa.findByPrimaryKey(patientid);
		    DoctorDAO doc=new DoctorDAO();
		    Doctor doctor=doc.findByPrimaryKey(doctorid);
			Recipe recipe = new Recipe (recipeid,time,proof,patient,doctor,yuliu);
			//把实体对象存放到数组
			recipes.add(recipe);
		}
		//关闭数据库连接
		super.closeConnection(conn);
		return recipes;
	}
	
	//查询处方表中的所有记录总条数
	private int findTotal() throws ClassNotFoundException, SQLException {
		int total =0;
		Connection conn =super.getConnection();
		PreparedStatement pstmt =conn.prepareStatement("select count(*)from recipe");
		ResultSet rs = pstmt.executeQuery();
		//因为结果集只有一条记录，无需循环
		if(rs.next()) {
			rs.getInt(1);//此处使用字段对应的序号，作用同rs.get.Int("count(*)"
		}
		return total;
	}
	
	//根据主键查单个处方
	public Recipe findById(int id) throws ClassNotFoundException, SQLException {
		Recipe recipe = new Recipe();
		Connection conn =super.getConnection();
		PreparedStatement pstmt =conn.prepareStatement("select * from recipe where id =?");
		pstmt.setInt(1, id);
		ResultSet rs = pstmt.executeQuery();
		if(rs.next()) {
			int recipeid = rs.getInt("id");//其中id为结果集字段名称
			String time= rs.getString("time");
			int proof= rs.getInt("proof");
			int patientid= rs.getInt("patient");
			int doctorid= rs.getInt("doctor");
		    String yuliu= rs.getString("yuliu");
			//把指针当前定位的记录信息存放到处方实体对象中
		    PatientDAO pa=new PatientDAO();
		    Patient patient=pa.findByPrimaryKey(patientid);
		    DoctorDAO doc=new DoctorDAO();
		    Doctor doctor=doc.findByPrimaryKey(doctorid);
			recipe = new Recipe (recipeid,time,proof,patient,doctor,yuliu);
			//把实体对象存放到数组
			
		
	}
		super.closeConnection(conn);
		return recipe;
	}	
	
	//查询处方表中的所有记录总条数
		private int findTotal(int parent) throws ClassNotFoundException, SQLException {
			int total =0;
			Connection conn =super.getConnection();
			PreparedStatement pstmt =conn.prepareStatement("select count(*)from recipe where parent = ?");
			pstmt.setInt(1, parent);
			ResultSet rs = pstmt.executeQuery();
			//因为结果集只有一条记录，无需循环
			if(rs.next()) {
				rs.getInt(1);//此处使用字段对应的序号，作用同rs.get.Int("count(*)"
			}
			return total;
		}
}
