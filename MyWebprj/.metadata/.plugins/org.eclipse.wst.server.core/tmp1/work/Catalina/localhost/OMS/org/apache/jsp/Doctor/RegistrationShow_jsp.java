/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-08-11 08:58:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Doctor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gxnu.entity.Registration;
import com.gxnu.service.imp.RegistrationService;
import com.gxnu.entity.Doctor;
import com.gxnu.util.Data;
import com.gxnu.service.IArticleService;
import com.gxnu.entity.Article;
import java.util.List;
import com.gxnu.service.imp.ArticleService;

public final class RegistrationShow_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gxnu.entity.Article");
    _jspx_imports_classes.add("com.gxnu.util.Data");
    _jspx_imports_classes.add("com.gxnu.service.IArticleService");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.gxnu.service.imp.RegistrationService");
    _jspx_imports_classes.add("com.gxnu.entity.Doctor");
    _jspx_imports_classes.add("com.gxnu.service.imp.ArticleService");
    _jspx_imports_classes.add("com.gxnu.entity.Registration");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
	String url = Data.URL + "/article";

      out.write("\r\n");
      out.write("\r\n");

	
	HttpSession doctorSession = request.getSession();
	Object obj = doctorSession.getAttribute(Data.DOCTOR);
	Doctor doctor = new Doctor();
	if (obj != null) {
		doctor = (Doctor) obj;
	}
	System.out.println("这里是预约信息的医生："+ doctor.toString());

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!Doctype html>\r\n");
      out.write("<html class=\"no-js\" lang=\"en\" dir=\"ltr\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<title>查看预约信息</title>\r\n");
      out.write("<!-- Summernote css -->\r\n");
      out.write("<link href=\"static/css/summernote-bs4.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<!-- plugin css file  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/responsive.dataTables.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/dataTables.bootstrap5.min.css\">\r\n");
      out.write("<!-- project css file  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"static/css/ihealth.style.min.css\">\r\n");
      out.write("<!-- Bootstrap Css -->\r\n");
      out.write("<link href=\"static/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<!-- Icons Css -->\r\n");
      out.write("<link href=\"static/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!-- App Css-->\r\n");
      out.write("<link href=\"static/css/app.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"ihealth-layout\" class=\"theme-tradewind\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- sidebar -->\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- main body area -->\r\n");
      out.write("\t\t<div class=\"main px-lg-4 px-md-4\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Body: Header -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Body: Body -->\r\n");
      out.write("\t\t\t<div class=\"body d-flex py-lg-3 py-md-2\">\r\n");
      out.write("\t\t\t\t<div class=\"container-xxl\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row align-items-center\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"border-0 mb-4\">\r\n");
      out.write("\t\t\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 class=\"fw-bold mb-0\">预约信息</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-auto d-flex w-sm-100\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary btn-set-task w-sm-100\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-bs-toggle=\"modal\" data-bs-target=\"#depadd\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<i class=\"icofont-plus-circle me-2 fs-6\"></i> 添加\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- Row end  -->\r\n");
      out.write("\t\t\t\t\t<div class=\"row clearfix g-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table id=\"myProjectTable\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"table table-hover align-middle mb-0\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 100%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">序号</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">患者名字</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">患者性别</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">患者年龄</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">患者联系方式</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">预约时间</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">预约编号</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");

											RegistrationService registrationService = new RegistrationService();
											List<Registration> registrations = registrationService.findByDoctorId(doctor.getId());
											System.out.println("测试：" + registrations.toString());
											int i = 1;
											for (Registration registration : registrations) {
												System.out.println("预约信息测试：" + registration.toString());
										
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(i++);
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold ms-1\">");
      out.print(registration.getPatient().getName());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold ms-1\">");
      out.print(registration.getPatient().getSex());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold ms-1\">");
      out.print(registration.getPatient().getAge());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(registration.getPatient().getTel());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(registration.getReserve_time());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(registration.getNumber());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												}
											
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- Row End -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Modal Custom Settings-->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Jquery Core Js -->\r\n");
      out.write("\t<script src=\"static/js/libscripts.bundle.js\"></script>\r\n");
      out.write("\t<!-- JAVASCRIPT -->\r\n");
      out.write("\t<script src=\"static/js/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"static/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\t<script src=\"static/js/metisMenu.min.js\"></script>\r\n");
      out.write("\t<script src=\"static/js/simplebar.min.js\"></script>\r\n");
      out.write("\t<script src=\"static/js/waves.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"static/js/bundle.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Summernote js -->\r\n");
      out.write("\t<script src=\"static/js/summernote-bs4.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- init js -->\r\n");
      out.write("\t<script src=\"static/js/summernote.init.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"static/js/app.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Plugin Js-->\r\n");
      out.write("\t<script src=\"static/js/dataTables.bundle.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Jquery Page Js -->\r\n");
      out.write("\t<script src=\"static/js/template.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction tj() {\r\n");
      out.write("\t\t\t//根据id获取html页面中的表单，并提交\r\n");
      out.write("\t\t\twindow.document.getElementById(\"addfrm\").submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//删除\r\n");
      out.write("\t\tfunction remove(url) {\r\n");
      out.write("\t\t\twindow.location.href = url;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//编辑方法\r\n");
      out.write("\t\tfunction edit(obj, id) {\r\n");
      out.write("\t\t\tvar $td = $(obj).parents('tr').children('td');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar title = $td.eq(1).text().replace(/\\s*/g, \"\");\r\n");
      out.write("\t\t\tvar content = $td.eq(2).text().replace(/\\s*/g, \"\");\r\n");
      out.write("\t\t\tvar pic = $td.eq(3).text().replace(/\\s*/g, \"\");\r\n");
      out.write("\t\t\tvar author = $td.eq(4).text().replace(/\\s*/g, \"\");\r\n");
      out.write("\t\t\tvar time = $td.eq(5).text().replace(/\\s*/g, \"\");\r\n");
      out.write("\t\t\t//alert(tel);\r\n");
      out.write("\r\n");
      out.write("\t\t\t//var i= address.toString();\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#ID\").val(id);\r\n");
      out.write("\t\t\t//  $(\"#updateName\").css('color','red').val(\"qqq\"+tel);\r\n");
      out.write("\t\t\t$(\"#updatetitle\").val(title);\r\n");
      out.write("\t\t\t$(\"#updatecontent\").val(content);\r\n");
      out.write("\t\t\t$(\"#updatepic\").val(pic);\r\n");
      out.write("\t\t\t//  $(\"#updateTel\").css('color','red').css('text-align','left');\r\n");
      out.write("\t\t\t$(\"#updateauthor\").val(author);\r\n");
      out.write("\t\t\t$(\"#updatetime\").val(time);\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// project data table\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$('#myProjectTable').addClass('nowrap').dataTable({\r\n");
      out.write("\t\t\t\tresponsive : true,\r\n");
      out.write("\t\t\t\tcolumnDefs : [ {\r\n");
      out.write("\t\t\t\t\ttargets : [ -1, -3 ],\r\n");
      out.write("\t\t\t\t\tclassName : 'dt-body-right'\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$('.deleterow').on('click', function() {\r\n");
      out.write("\t\t\t\tvar tablename = $(this).closest('table').DataTable();\r\n");
      out.write("\t\t\t\ttablename.row($(this).parents('tr')).remove().draw();\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
