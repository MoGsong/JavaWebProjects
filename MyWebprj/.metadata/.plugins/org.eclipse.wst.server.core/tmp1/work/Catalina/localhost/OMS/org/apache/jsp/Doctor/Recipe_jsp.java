/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-08-11 08:58:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Doctor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gxnu.entity.Patient;
import java.util.Collections;
import com.gxnu.entity.OutStore;
import com.gxnu.service.imp.OutStoreService;
import com.gxnu.service.IOutStoreService;
import java.util.ArrayList;
import com.gxnu.entity.OutDetail;
import com.gxnu.entity.Inventory;
import com.gxnu.service.imp.InventoryService;
import com.gxnu.service.IInventoryService;
import com.gxnu.entity.Measure;
import com.gxnu.service.imp.MeasureService;
import com.gxnu.service.IMeasureService;
import com.gxnu.entity.DrugInfo;
import java.util.List;
import com.gxnu.service.imp.DrugInfoService;
import com.gxnu.service.IDrugInfoService;
import com.gxnu.util.Data;

public final class Recipe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gxnu.entity.OutStore");
    _jspx_imports_classes.add("com.gxnu.entity.DrugInfo");
    _jspx_imports_classes.add("com.gxnu.service.IInventoryService");
    _jspx_imports_classes.add("com.gxnu.entity.Measure");
    _jspx_imports_classes.add("com.gxnu.service.imp.OutStoreService");
    _jspx_imports_classes.add("com.gxnu.service.IDrugInfoService");
    _jspx_imports_classes.add("com.gxnu.entity.OutDetail");
    _jspx_imports_classes.add("com.gxnu.service.IMeasureService");
    _jspx_imports_classes.add("com.gxnu.service.imp.MeasureService");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.gxnu.util.Data");
    _jspx_imports_classes.add("com.gxnu.entity.Inventory");
    _jspx_imports_classes.add("com.gxnu.service.imp.DrugInfoService");
    _jspx_imports_classes.add("com.gxnu.service.imp.InventoryService");
    _jspx_imports_classes.add("com.gxnu.entity.Patient");
    _jspx_imports_classes.add("com.gxnu.service.IOutStoreService");
    _jspx_imports_classes.add("java.util.Collections");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html class=\"no-js\" lang=\"en\" dir=\"ltr\">\r\n");
      out.write("\r\n");

//获取请求转发信息
	Object obj = request.getAttribute("OUTDETAIL");
	List<OutDetail> outDetails = new ArrayList<OutDetail>();
	if (obj != null) {
		outDetails = (List<OutDetail>) obj;
	}


      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");

//获取病人登录信息
	Object obj2 = session.getAttribute(Data.PATIENT);
	Patient patient = new Patient();
	if (obj2 != null) {
		patient = (Patient) obj2;
	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<title>:: --电子处方</title>\r\n");
      out.write("<!-- Summernote css -->\r\n");
      out.write("<link href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/summernote-bs4.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<!-- plugin css file  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/responsive.dataTables.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/dataTables.bootstrap5.min.css\">\r\n");
      out.write("<!-- project css file  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/ihealth.style.min.css\">\r\n");
      out.write("<!-- Bootstrap Css -->\r\n");
      out.write("<link href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("\ttype=\"text/css\">\r\n");
      out.write("<!-- Icons Css -->\r\n");
      out.write("<link href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/icons.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<!-- App Css-->\r\n");
      out.write("<link href=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/css/app.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"ihealth-layout\" class=\"theme-tradewind\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- sidebar -->\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- main body area -->\r\n");
      out.write("\t\t<div class=\"main px-lg-4 px-md-4\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Body: Header -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Body: Body -->\r\n");
      out.write("\t\t\t<div class=\"body d-flex py-lg-3 py-md-2\">\r\n");
      out.write("\t\t\t\t<div class=\"container-xxl\">\r\n");
      out.write("\t\t\t\t\t<div class=\"row align-items-center\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"border-0 mb-4\">\r\n");
      out.write("\t\t\t\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"card-header py-3 no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 class=\"fw-bold mb-0\">电子处方</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"col-auto d-flex w-sm-100\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-primary btn-set-task w-sm-100\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata-bs-toggle=\"modal\" data-bs-target=\"#depadd\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<i class=\"icofont-plus-circle me-2 fs-6\"></i>添加\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- Row end  -->\r\n");
      out.write("\t\t\t\t\t<div class=\"row clearfix g-3\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table id=\"myProjectTable\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"table table-hover align-middle mb-0\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 100%\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">序号</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">药品名称</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">数量</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">单位</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">用法</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">价格</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">基本操作</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
int i=0;
											IOutStoreService outStoreService =new OutStoreService();
											List<OutStore> outStores = outStoreService.findAll();
											List<Integer> nums = new ArrayList<Integer>();
											for(OutStore outStore : outStores) {
												nums.add(outStore.getId());
											}
											int maxId = Collections.max(nums);//获取出库表最大id
												for (OutDetail outDetail : outDetails) {
													++i;
													if(outDetail.getOutStore().getId()==maxId){
														int tprice = outDetail.getSprice()*outDetail.getNum();
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(i);
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold ms-1\">");
      out.print(outDetail.getInventory().getDrugInfo().getName() );
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(outDetail.getNum());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(outDetail.getInventory().getMeasur().getName());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(outDetail.getTusage());
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"fw-bold\">");
      out.print(tprice);
      out.write("</span></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"btn-group\" role=\"group\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Basic outlined example\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn-outline-secondary \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a h><i class=\"icofont-ui-delete text-danger\"></i></a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

													}}
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- Row End -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\tdata-bs-dismiss=\"modal\">取消</button>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(Data.URL);
      out.write("/recipe?OP=send&tel=");
      out.print(patient.getTel());
      out.write("&id=");
      out.print(patient.getId());
      out.write("\"><button type=\"button\" class=\"btn btn-primary\">保存</button></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- Modal Custom Settings-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 添加药品-->\r\n");
      out.write("\t\t\t<div class=\"modal fade\" id=\"depadd\" tabindex=\"-1\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tclass=\"modal-dialog modal-dialog-centered modal-md modal-dialog-scrollable\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t<h5 class=\"modal-title  fw-bold\" id=\"depaddLabel\">添加药品</h5>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\t\t\taria-label=\"Close\"></button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"deadline-form\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<form action=\"");
      out.print(Data.URL);
      out.write("/recipe?OP=adddrug\" method=\"post\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"addfrm\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"exampleFormControlInput1111\" class=\"form-label\">药品名</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select name=\"druginfo\" class=\"form-control\" id=\"druginfo\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tonchange=\"xxx()\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\" selected=\"selected\">--请选择药品--</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													//查询所有药品  获取动态权限，添加下拉框
													IDrugInfoService drugInfoService = new DrugInfoService();
													List<DrugInfo> drugInfos = drugInfoService.findAll();
													//查询库存表，获取药品数量
													IInventoryService inventoryService = new InventoryService();
													List<Inventory> inventorys = inventoryService.find();
													for (DrugInfo drugInfo : drugInfos) {
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
      out.print(drugInfo.getId());
      out.write('"');
      out.write('>');
      out.print(drugInfo.getName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													}
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<label for=\"depone\" class=\"form-label\">库存数量</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" id=\"have\" readonly=\"ture\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tname=\"have\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"depone\" class=\"form-label\">数量</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"num\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"deptwo\" class=\"form-label\">单位</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<select name=\"measure\" class=\"form-control\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													//查询所有单位  获取动态权限，添加下拉框
													IMeasureService measureService = new MeasureService();
													List<Measure> measures = measureService.find();
													for (Measure measure : measures) {
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
      out.print(measure.getId());
      out.write('"');
      out.write('>');
      out.print(measure.getName());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													}
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</select>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"depthree\" class=\"form-label\">用法</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\" rows=\"3\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle=\"width: 300px; height: 150px\" name=\"use\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-sm-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"deptwo\" class=\"form-label\">单价</label> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" id=\"price\" name=\"price\" readonly=\"ture\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- end row -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- end row -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- end container-fluid -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-bs-dismiss=\"modal\">取消</button>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" class=\"btn btn-primary\" value=\"添加\"\r\n");
      out.write("\t\t\t\t\t\t\t\tonclick=\"tj()\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<!-- 编辑-->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Jquery Core Js -->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/libscripts.bundle.js\"></script>\r\n");
      out.write("\t<!-- JAVASCRIPT -->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/metisMenu.min.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/simplebar.min.js\"></script>\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/waves.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/bundle.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Summernote js -->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/summernote-bs4.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- init js -->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/summernote.init.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/app.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Plugin Js-->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/dataTables.bundle.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- Jquery Page Js -->\r\n");
      out.write("\t<script src=\"");
      out.print(Data.URL);
      out.write("/Doctor/static/js/template.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// project data table\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$('#myProjectTable').addClass('nowrap').dataTable({\r\n");
      out.write("\t\t\t\tresponsive : true,\r\n");
      out.write("\t\t\t\tcolumnDefs : [ {\r\n");
      out.write("\t\t\t\t\ttargets : [ -1, -3 ],\r\n");
      out.write("\t\t\t\t\tclassName : 'dt-body-right'\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$('.deleterow').on('click', function() {\r\n");
      out.write("\t\t\t\tvar tablename = $(this).closest('table').DataTable();\r\n");
      out.write("\t\t\t\ttablename.row($(this).parents('tr')).remove().draw();\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction xxx(){\r\n");
      out.write("\t\t\talert(\"成功喽\");\r\n");
      out.write("\t\t\t var myselect=document.getElementById(\"druginfo\");\r\n");
      out.write("\t\t\t var index = myselect.selectedIndex;  // selectedIndex是所选中的项的index\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\tasync:\tfalse,\t\t\t//默认为true，即请求为异步请求\r\n");
      out.write("\t\t\t\ttimeout:5000,\t\t\t//设置请求超时时间（毫秒）\r\n");
      out.write("\t\t\t\tdataType:\"json\",\t\t//返回的数据类型\r\n");
      out.write("\t\t\t\ttype:\t\"post\",\t\t\t//设置请求方式\r\n");
      out.write("\t\t\t\turl:\t\"");
      out.print(basePath);
      out.write("/ajax\", //设置请求URL\r\n");
      out.write("\t\t\t\tdata : \"option=\" + myselect.options[index].value, //设置传递的参数值\r\n");
      out.write("\t\t\t\tsuccess : function(msg) { //设置响应成功之后执行的回调函数\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#have\").val(msg.num);\r\n");
      out.write("\t\t\t\t\t$(\"#price\").val(msg.xprice);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function() { //设置响应失败之后执行的回调函数\r\n");
      out.write("\t\t\t\t\talert(\"失败喽\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction tj() {\r\n");
      out.write("\t\t\t//根据id获取html页面中的表单，并提交\r\n");
      out.write("\t\t\twindow.document.getElementById(\"addfrm\").submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
