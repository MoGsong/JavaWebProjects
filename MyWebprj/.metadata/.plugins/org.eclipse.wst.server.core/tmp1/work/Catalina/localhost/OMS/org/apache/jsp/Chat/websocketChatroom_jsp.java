/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2022-08-11 03:11:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Chat;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gxnu.entity.Registration;
import com.gxnu.dao.RegistrationDAO;
import com.gxnu.util.Data;

public final class websocketChatroom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gxnu.util.Data");
    _jspx_imports_classes.add("com.gxnu.dao.RegistrationDAO");
    _jspx_imports_classes.add("com.gxnu.entity.Registration");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>会诊室</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"Chat/js/jquery-1.4.3.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ws;\r\n");
      out.write("\t//嵌入Java代码，不加\"\"js不执行'\r\n");
      out.write("\tvar ws_url=  \"");
      out.print(Data.CHAT);
      out.write("\"\r\n");
      out.write("\t//发新消息，滚动条置底\r\n");
      out.write("\twindow.onload = reset;\r\n");
      out.write("\t\r\n");
      out.write("\tvar text = $('.ctext');\r\n");
      out.write("\t$(function() {\t\r\n");
      out.write("\t\t ws_connect();\r\n");
      out.write("\t\t $(\"#send\").click(function(){\r\n");
      out.write("\t\t    ws_sendMsg();\r\n");
      out.write("\t\t    reset();\r\n");
      out.write("\t\t });\r\n");
      out.write("\t\t $(\"#uploadImg\").click(function(){ \r\n");
      out.write("\t\t\tws_sendImg();\r\n");
      out.write("\t\t\treset();\r\n");
      out.write("\t\t });\t\t \r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction ws_connect() {\r\n");
      out.write("\t\tvar name =\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\tif ('WebSocket' in window) {\r\n");
      out.write("\t\t\tws = new WebSocket(ws_url+\"?NAME=\"+name);\r\n");
      out.write("\t\t} else if ('MozWebSocket' in window) {\r\n");
      out.write("\t\t\tws = new MozWebSocket(ws_url+\"?NAME=\"+name);\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tconsole.log('Error: WebSocket is not supported by this browser.');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tws.onopen = function() {\r\n");
      out.write("\t\t\tconsole.log('Info: WebSocket connection opened.');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\tws.onclose = function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tconsole.log('Info: WebSocket closed.');\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("/* \t\tws.onmessage = function(message) {\r\n");
      out.write("\t\t\t//console.log(\"@@@\"+message.data);\r\n");
      out.write("\t\t\tvar receiveMsg=message.data;\r\n");
      out.write("\t\t\t var obj=JSON.parse(receiveMsg);\r\n");
      out.write("\t\t\t if(obj.type==\"s\"){\r\n");
      out.write("\t\t\t\t $(\"#record\").append(\"<div>\"+obj.msgDateStr+\"\"+obj.msgInfo+\"</div>\");\r\n");
      out.write("\t\t\t\t var userHtml=\"\";\r\n");
      out.write("\t\t\t\t  var userList=obj.userList;\r\n");
      out.write("\t\t\t\t    for(var i=0;i<userList.length;i++){\r\n");
      out.write("\t\t\t\t    \tuserHtml=userHtml+userList[i]+\"<br/><br/>\";\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t     $(\"#userList\").html(userHtml);\r\n");
      out.write("\t\t\t }else if(obj.type==\"p\"){\r\n");
      out.write("\t\t\t\t $(\"#record\").append(\"<div>\"+obj.msgSender+\":&nbsp;\"+obj.msgDateStr+\"</div><div>\"+obj.msgInfo+\"</div>\");\r\n");
      out.write("\t\t\t }else{\r\n");
      out.write("\t\t\t\t //未来可以用于扩展功能\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t}; */\r\n");
      out.write("\tws.onmessage = function(message) {\r\n");
      out.write("\t\t   if(\"string\"==typeof(message.data)){\r\n");
      out.write("\t\t   \t//console.log(\"@@@\"+message.data);\r\n");
      out.write("\t\t\tvar receiveMsg=message.data;\r\n");
      out.write("\t\t\t var obj=JSON.parse(receiveMsg);\r\n");
      out.write("\t\t\t if(obj.type==\"s\"){\r\n");
      out.write("\t\t\t\t $(\"#record\").append(\"<div>\"+obj.msgDateStr+\"\"+obj.msgInfo+\"</div>\");\r\n");
      out.write("\t\t\t\t reset();\r\n");
      out.write("\t\t\t\t var userHtml=\"\";\r\n");
      out.write("\t\t\t\t  var userList=obj.userList;\r\n");
      out.write("\t\t\t\t    for(var i=0;i<userList.length;i++){\r\n");
      out.write("\t\t\t\t    \tuserHtml=userHtml+userList[i]+\"<br/><br/>\";\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t     $(\"#userList\").html(userHtml);\r\n");
      out.write("\t\t\t }else if(obj.type==\"p\"){\r\n");
      out.write("\t\t\t\t $(\"#record\").append(\"<div>\"+obj.msgSender+\":&nbsp;\"+obj.msgDateStr+\"</div><div>\"+obj.msgInfo+\"</div>\");\r\n");
      out.write("\t\t\t\t reset();\r\n");
      out.write("\t\t\t }else if(obj.type==\"img\"){\r\n");
      out.write("\t\t\t\t picp=\"<div>\"+obj.msgSender+\":&nbsp;\"+obj.msgDateStr+\"</div>\";\r\n");
      out.write("\t\t\t\t reset();\r\n");
      out.write("\t\t\t }else{\r\n");
      out.write("\t\t\t  //未来可以用于扩展功能\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t   }else{\r\n");
      out.write("\t\t      var reader=new FileReader();\r\n");
      out.write("\t\t      reader.readAsDataURL(message.data);\r\n");
      out.write("\t\t      reader.onload=function(evt){\r\n");
      out.write("\t\t          if(evt.target.readyState==FileReader.DONE){\r\n");
      out.write("\t\t             var url=evt.target.result;\r\n");
      out.write("\t\t           $(\"#record\").append(picp+\"<div><img src='\"+url+\"' style='max-height:150px; max-width:150px; vertical-align: middle; align: center;'/></div>\");\r\n");
      out.write("\t\t           reset();\r\n");
      out.write("\t\t          }\r\n");
      out.write("\t\t      }\r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction ws_sendMsg() {\r\n");
      out.write("\t\tif($(\"#msg\").val()){\r\n");
      out.write("\t\t\tvar msg=$(\"#msg\").val();\r\n");
      out.write("\t         ws.send(msg);\r\n");
      out.write("\t        msg= $(\"#msg\").val(\"\");\r\n");
      out.write("\t\t }else{\r\n");
      out.write("\t\t\talert(\"发送消息不能为空\");\r\n");
      out.write("\t\t }\r\n");
      out.write("         \r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction ws_sendImg() {\r\n");
      out.write("\t      var fObj=$(\"#img\")[0].files[0];\r\n");
      out.write("\t        if(fObj){\r\n");
      out.write("\t          var reader=new FileReader();\r\n");
      out.write("\t          reader.readAsArrayBuffer(fObj);\r\n");
      out.write("\t           reader.onload=function(evt){\r\n");
      out.write("\t              ws.send(evt.target.result);\r\n");
      out.write("\t              reset();\r\n");
      out.write("\t           }\r\n");
      out.write("\t           $(\"#img\").val(\"\");\r\n");
      out.write("\t        }else{\r\n");
      out.write("\t          $(\"#img\").val(\"\");\r\n");
      out.write("\t        }\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\tfunction reset(){\t\r\n");
      out.write("\t\t//重置滚动条\r\n");
      out.write("\t\tlet height = document.querySelector('.ctext').scrollHeight;\r\n");
      out.write("        document.querySelector(\".ctext\").scrollTop = height;\r\n");
      out.write("        //alert('2');\r\n");
      out.write("\t};\r\n");
      out.write("\t\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");

	Object obj = session.getAttribute("id");
	int id = 0;
	if(obj!=null){
		id =  Integer.parseInt(String.valueOf(obj));
	}
	Object objt = session.getAttribute("sid");
	int sid = 0;
	if(obj!=null){
		sid = Integer.parseInt(String.valueOf(objt));
	}

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//var btn = \r\n");
      out.write("\t\tfunction disconn(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\twindow.top.location.href=\"");
      out.print(Data.URL);
      out.write("/disconnect?id=");
      out.print(id );
      out.write("&sid=");
      out.print(sid);
      out.write("\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t********************会诊室******************************\r\n");
      out.write("\t<table style=\"border: 1px solid #00F;\">\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t<h3>welcome to【");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.NAME}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("】 use this system!</h3>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td width=\"500px\" height=\"300px\"\r\n");
      out.write("\t\t\t\t\tstyle=\"border: 1px solid #00F; vertical-align: top;\" id=\"content\"\r\n");
      out.write("\t\t\t\t\tname=\"content\">\r\n");
      out.write("\t\t\t\t\t<div  style=\"background-color: white;\">\r\n");
      out.write("\t\t\t\t\t\t<table  id=\"tbRecord\">\r\n");
      out.write("\t\t\t\t\t\t\t<tbody class=\"ctext\" id=\"record\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"display: block; height: 300px; width: 500px; overflow: auto;\" />\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td width=\"100px\"\r\n");
      out.write("\t\t\t\t\tstyle=\"border: 1px solid #00F; vertical-align: top;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"overflow: auto;\">\r\n");
      out.write("\t\t\t\t\t\t<table id=\"tbuserList\">\r\n");
      out.write("\t\t\t\t\t\t\t<tbody id=\"userList\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"display: block; height: 300px; overflow: auto;\" />\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t<tfoot>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\"><input id=\"msg\" name=\"msg\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100%;\" placeholder=\"输入您想要发送的消息...\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t\t\t<button style=\"margin: 0 30px 0 30px\" id=\"send\" name=\"send\">send</button>\r\n");
      out.write("\t\t\t\t\t<input type=\"file\" id=\"img\" style=\"width: 200px; height: 30px\" />\r\n");
      out.write("\t\t\t\t\t<button id=\"uploadImg\" name=\"uploadImg\">uploadImg</button>\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" style=\"margin: 0 30px 0 30px\" id=\"disconnect\"\r\n");
      out.write("\t\t\t\t\t\tname=\"disconnect\" value=\"Disconnect\" onclick=\"disconn()\">\r\n");
      out.write("\t\t\t\t</td>\t\t\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</tfoot>\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("\t\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
