//package com.gxlq.dao;
//
//import java.sql.Connection;
//import java.sql.PreparedStatement;
//import java.sql.SQLException;
//
//import com.gxlq.entity.Role;
//
//public class RoleDAO extends BaseDAO{
//	/**
//	 * ???????CURD????
//	 * ????
//	 * @throws ClassNotFoundException 
//	 */
//	public void add(Role role) throws SQLException, ClassNotFoundException{
//		//??????????????mysql?????
//		Connection conn = super.getConnection();
//		//???????????1???????
//		PreparedStatement pstmt = 
//				conn.prepareStatement("insert into role(name) value(?)");
//		//????????????????????????
//		pstmt.setString(1, role.getName());
//		//???SQL?????????????mysql????
//		pstmt.executeUpdate();
//		//????????????
//		super.closeConnection(conn);
//		
//	}
//
//}
package com.gxlq.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.gxlq.entity.Role;

/**
 * ??????CURD????
 *
 * @author johny
 * ??????
 */
public class RoleDAO extends BaseDAO {
    /**
     * ?????
     *
     * @param role ????????????????????{id=1,name=???}
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void add(Role role) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("insert into role(name) values(?)");
        //???????????,???????????????
        pstmt.setString(1, role.getName());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }

    /**
     * ?????
     *
     * @param role ???????????????????{id=3,name=????}
     * @return
     * @throws SQLException
     * @throws ClassNotFoundException
     */

    public void merge(Role role) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("update role set name=? where id=?");
        //???????????,???????????????
        pstmt.setString(1, role.getName());
        pstmt.setInt(2, role.getId());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }

    /**
     * ??????
     *
     * @param role ???????????????????{id=3,name=????}
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void delete(Role role) throws ClassNotFoundException, SQLException {
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt =
                conn.prepareStatement("delete from role where id=?");
        //???????????,???????????????
        pstmt.setInt(1, role.getId());
        //???SQL???,??????????mysql????
        pstmt.executeUpdate();
        //????????????
        super.closeConnection(conn);
    }
    //??????

    /**
     * ??????????????
     *
     * @return ??????????????????????role???????????????
     * @throws ClassNotFoundException
     * @throws SQLException
     */
    public Role[] findAll() throws ClassNotFoundException, SQLException {
        //????????
        Role[] roles = new Role[findTotal()]; //???????????null
        int i = 0;
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt = conn.prepareStatement("select * from role");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        ResultSet rs = pstmt.executeQuery();

        //???????????????
        while (rs.next()) {
            //??????????????????????????????
			/*
			int id = rs.getInt("id");  //id???????? 
			String name = rs.getString("name"); //name????????
			Role role = new Role(id, name); //??????????Role??????
			roles[i] = role;
			i++;
			*/

            roles[i++] = new Role(rs.getInt("id"), rs.getString("name"));
        }
        //????????????
        super.closeConnection(conn);
        //????????
        return roles;
    }

    /**
     * ????????????
     *
     * @return ??????????????????????role???????????????
     * @throws ClassNotFoundException
     * @throws SQLException
     */
    public Role findByPrimaryKey(int ID) throws ClassNotFoundException, SQLException {
        Role role = new Role();
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt = conn.prepareStatement("select * from role where id=?");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        pstmt.setInt(1, ID);
        ResultSet rs = pstmt.executeQuery();

        //?????????????????????????????????????????????????????????
        if (rs.next()) {
            //??????????????????????????????
            int id = rs.getInt("id");  //id????????
            String name = rs.getString("name"); //name????????
            role = new Role(id, name); //??????????Role??????
        }
        //????????????
        super.closeConnection(conn);
        //????????
        return role;
    }

    //???????????????????
    private int findTotal() throws ClassNotFoundException, SQLException {
        int total = 0;
        //1?????????? 2??????rbac?????
        Connection conn = super.getConnection();
        //3?????????????????? java.sql.Connection,????????????????java.sql.PreparedStatement????????SQL???
        //???????????????????????1???????????????????????
        PreparedStatement pstmt = conn.prepareStatement("select  count(*) from role");
        //4?????????????????java.sql.PreparedStatement???????????????????java.sql.ResultSet
        ResultSet rs = pstmt.executeQuery();

        //???????????????
        if (rs.next()) {
            //??????????????????????????????
            total = rs.getInt(1);  // ???1???????????????? count(*)????????
        }
        //????????????
        super.closeConnection(conn);
        return total;
    }

}

